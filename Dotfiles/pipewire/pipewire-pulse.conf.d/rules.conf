# https://docs.pipewire.org/page_man_pipewire_conf_5.html#pipewire_conf__match_rules
# https://docs.pipewire.org/page_man_pipewire-client_conf_5.html#client_conf__stream_properties

## OVERVIEW
# Specify properties of Pulseaudio clients
# Specifically, we want to add our custom `media.route` property for Wireplumber
# As the majority of clients on this system use the Pulse API, this is where the majority of matches will take place
# pulse.rules specifically matches pulse clients, rather than pulse streams (stream.rules)

pulse.rules = [
	{	## COMMON APPLICATIONS (games, utilities, etc.)
		matches = [
			{ application.process.binary = "resolve" }
			{ application.process.binary = "steam" }
			{ application.process.binary = "wine64-preloader" }
		]
		actions = { update-props = { media.route = "applications" }}
	}
	{	## MULTIMEDIA (music, video, etc.)
		matches = [
			{ application.process.binary = "firefox" }
			{ application.process.binary = "firefox-bin" }
			{ application.process.binary = "librewolf-bin" }
			{ application.process.binary = "spotify" }
		]
		actions = { update-props = { media.route = "media" }}
	}
	{	## COMMUNICATION (discord, teams, zoom, etc.)
		matches = [
			{ application.process.binary = "vesktop.bin" }
		]
		actions = { update-props = { media.route = "voice" }}
	}
]

# -------------------------------------------------------------------------------------- #

## A note for future me:
# We have to use stream.rules here instead of pulse.rules as the latter matches the client
# The client is not a stream and therefore cannot match a given media class
# However the existence of a client *does* depend upon an application, so we use those rules for exec match rules

stream.rules [
	{
		## CARLA INPUT NODE
		matches = [
			{
				application.process.session-id 	= "carla-pw"
				application.name 				= "Carla"
				media.class 					= Stream/Input/Audio
			}
		]
		actions = {
			update-props = {
				# node.name						= "routing.sterling-mic"
				node.link-group 				= "carla-pw"
				node.description 				= "Carla-PW (in)"
				node.target						= "routing.input-2"
				# node.autoconnect				= false
				
				# media.class 					= Audio/Sink
				# filter.smart					= true
			}
		}
	}
	{
		## CARLA OUTPUT NODE
		matches = [
			{
				application.process.session-id 	= "carla-pw"
				application.name 				= "Carla"
				media.class 					= Stream/Output/Audio
			}
		]
		actions = {
			update-props = {
				node.link-group 				= "carla-pw"
				node.description 				= "Carla-PW (out)"
				node.target 					= "input.sterling"

				# media.class 					= Audio/Source
				# filter.smart					= true
				# filter.smart.target			= "routing.sterling-mic"
			}
		}
	}
]
